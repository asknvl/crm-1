<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:crm.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:cust="using:crm.Views.custom"
		xmlns:tabview="using:crm.Views.tabs"
		xmlns:tabvms="using:crm.ViewModels.tabs"				
		xmlns:material="using:Material.Icons.Avalonia"
		xmlns:scrnvm="using:crm.ViewModels.tabs.home.screens.users"
		xmlns:scrnview="using:crm.Views.tabs.home.screens.users"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="crm.Views.MainWindow"		
		ExtendClientAreaToDecorationsHint="True"
        ExtendClientAreaChromeHints="NoChrome"
		WindowState="{Binding WindowState}"
        ExtendClientAreaTitleBarHeightHint="-1">

    <Design.DataContext>
        <vm:mainVM/>
    </Design.DataContext>

	<Window.Styles>		
		<Style Selector="TextBlock">
			<Setter Property="FontFamily" Value="/Assets/fonts/Inter/Inter.ttf#Inter"/>
		</Style>
		<Style Selector="ContextMenu">
			<Setter Property="FontFamily" Value="/Assets/fonts/Inter/Inter.ttf#Inter"/>
		</Style>
		<Style Selector="TextBox">
			<Setter Property="FontFamily" Value="/Assets/fonts/Inter/Inter.ttf#Inter"/>			
		</Style>
		<Style Selector="Button /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="TextBlock.FontFamily" Value="/Assets/fonts/Inter/Inter.ttf#Inter"/>
		</Style>
		
		<Style Selector="Button.Semaphore">
			<Setter Property="CornerRadius" Value="100"/>
			<Setter Property="BorderBrush" Value="{DynamicResource ThreeDotBorderColor}"/>
			<Setter Property="BorderThickness" Value="1.5"/>
			<Setter Property="Background" Value="Transparent"/>
		</Style>
		<Style Selector="Button.Semaphore:pointerover /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="Background" Value="{Binding $parent[Button].Background} "/>
			<Setter Property="BorderThickness" Value="{Binding $parent[Button].BorderThickness} "/>
			<Setter Property="BorderBrush" Value="{Binding $parent[Button].BorderBrush} "/>
		</Style>
		<Style Selector="Button.Semaphore:pressed /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="Background" Value="{Binding $parent[Button].Background} "/>
			<Setter Property="BorderThickness" Value="{Binding $parent[Button].BorderThickness} "/>
			<Setter Property="BorderBrush" Value="{Binding $parent[Button].BorderBrush} "/>
		</Style>
		<Style Selector="Button.Semaphore:disabled /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderThickness" Value="{Binding $parent[Button].BorderThickness} "/>
			<Setter Property="BorderBrush" Value="{Binding $parent[Button].BorderBrush} "/>
		</Style>		
		<Style Selector="Button.Icon /template/ ContentPresenter#PART_ContentPresenter">			
			<Setter Property="Background" Value="Transparent"/>			
			<Setter Property="CornerRadius" Value="0"/>
			<Setter Property="TextBlock.Foreground" Value="{DynamicResource TopPanelControlForeground}"/>
		</Style>		
		<Style Selector="Button.Icon:pointerover /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="Background" Value="{DynamicResource TopPanelControlBackgroundPointerOver}"/>			
			<Setter Property="TextBlock.Foreground" Value="{DynamicResource TopPanelControlForegroundPointerOver}"/>
			<Setter Property="BorderBrush" Value="Transparent" />			
		</Style>	
		<Style Selector="Button.Icon:disabled /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="Background" Value="Transparent"/>
		</Style>
		<Style Selector="Window[IsActive=true] Grid#TOP">
			<Setter Property="IsEnabled" Value="True"/>
			<Setter Property="Background" Value="{DynamicResource TopPanelActiveColor}"/>
		</Style>
		<Style Selector="Window[IsActive=False] Grid#TOP">
			<Setter Property="IsEnabled" Value="False"/>
			<Setter Property="Background" Value="{DynamicResource TopPanelInActiveColor}"/>
		</Style>
		<Style Selector="Grid:pointerover > Button#b1">
			<Setter Property="Background" Value="{DynamicResource CloseDotColor}"/>
			<Setter Property="BorderThickness" Value="0"/>
		</Style>
		<Style Selector="Grid:pointerover > Button#b2">
			<Setter Property="Background" Value="{DynamicResource HideDotColor}"/>
			<Setter Property="BorderThickness" Value="0"/>
		</Style>
		<Style Selector="Grid:pointerover > Button#b3">
			<Setter Property="Background" Value="{DynamicResource MaximizeDotColor}"/>
			<Setter Property="BorderThickness" Value="0"/>
		</Style>		
	</Window.Styles>

	<Grid>
		<Grid RowDefinitions="45, *">
			<Grid Name="TOP" Grid.Row="0" ColumnDefinitions="Auto, *, Auto">			
				<Grid Grid.Column="0" ColumnDefinitions="Auto, Auto, Auto, Auto" VerticalAlignment="Stretch" Background="Transparent" Margin="10">
					<Button Name="b1" Command="{Binding closeCmd}" Classes="Button Semaphore" Grid.Column="0" Height="14" Width="14" Margin="5"/>				
					<Button Name="b2" Command="{Binding maximizeCmd}" Classes="Button Semaphore" Grid.Column="1" Height="14" Width="14" Margin="5"/>
					<Button Name="b3" Command="{Binding minimizeCmd}" Classes="Button Semaphore" Grid.Column="2" Height="14" Width="14" Margin="5"/>				
				</Grid>				
				<ListBox Grid.Column="1" 
						 Items="{Binding TabsList}" 
						 SelectedItem="{Binding Content}" 
						 Background="Transparent" 
						 Foreground="White" 
						 VerticalAlignment="Stretch">								
					<ListBox.ItemsPanel>
						<ItemsPanelTemplate>
							<StackPanel Orientation="Horizontal"/>
						</ItemsPanelTemplate>
					</ListBox.ItemsPanel>
					<ListBox.Styles>					
						<Style Selector="ListBoxItem:selected /template/ ContentPresenter">						
							<Setter Property="TextBlock.Foreground" Value="{DynamicResource TopPanelControlForegroundSelected}"/>
							<Setter Property="TextBlock.Background" Value="{DynamicResource TopPanelControlBackgroundSelected}"/>
						</Style>
						<Style Selector="ListBoxItem:pointerover /template/ ContentPresenter">
							<Setter Property="TextBlock.Foreground" Value="{DynamicResource TopPanelControlForegroundPointerOver}"/>
							<Setter Property="TextBlock.Background" Value="{DynamicResource TopPanelControlBackgroundPointerOver}"/>
						</Style>
						<Style Selector="ListBoxItem:disabled /template/ ContentPresenter#PART_ContentPresenter">
							<Setter Property="TextBlock.Foreground" Value="{DynamicResource TopPanelControlForegroundDisabled}" />
						</Style>
						<Style Selector="ListBoxItem">						
							<Setter Property="TextBlock.Foreground" Value="{DynamicResource TopPanelControlForeground}"/>						
						</Style>
					</ListBox.Styles>
					<ListBox.DataTemplates>
						<DataTemplate DataType="{x:Type tabvms:loginVM}">
							<tabview:TextTabHeader/>
						</DataTemplate>
						<DataTemplate DataType="{x:Type tabvms:tokenVM}">
							<tabview:TextTabHeader/>
						</DataTemplate>
						<DataTemplate DataType="{x:Type tabvms:registrationVM}">
							<tabview:TextTabHeader/>
						</DataTemplate>
						<DataTemplate DataType="{x:Type tabvms:ScreenTab}">
							<tabview:TextTabHeader/>
						</DataTemplate>
						<DataTemplate DataType="{x:Type tabvms:homeVM}">
							<Grid VerticalAlignment="Stretch" Margin="2, 0, 0,-4" IsEnabled="False">
								<ContentControl>
									<material:MaterialIconExt Kind="Home" Size="22"/>
								</ContentControl>								
							</Grid>
						</DataTemplate>						
					</ListBox.DataTemplates>				
				</ListBox>
				<Grid 
					Grid.Column="2"
					ColumnDefinitions="Auto, Auto"
					Margin="0, 0, 15, 0">					
					<TextBlock
						Grid.Column="0"
						VerticalAlignment="Center"
						Foreground="Gray"
						FontSize="12"
						Margin="2">
						XTime CRM v0.1
					</TextBlock>
					<TextBlock
						Grid.Column="1"
						VerticalAlignment="Center"
						Foreground="White"
						FontSize="12"
						Margin="2">
						beta
					</TextBlock>
				</Grid>
			</Grid>
			<Grid Grid.Row="1">			
				<Grid.DataTemplates>
					<DataTemplate DataType="{x:Type tabvms:loginVM}">					
						<tabview:loginTab/>
					</DataTemplate>
					<DataTemplate DataType="{x:Type tabvms:tokenVM}">
						<tabview:tokenTab/>
					</DataTemplate>
					<DataTemplate DataType="{x:Type tabvms:registrationVM}">
						<tabview:registrationTab/>
					</DataTemplate>
					<DataTemplate DataType="{x:Type tabvms:homeVM}">
						<tabview:homeTab/>
					</DataTemplate>
					<DataTemplate DataType="{x:Type tabvms:ScreenTab}">
						<Grid>
							<Grid.DataTemplates>
								<DataTemplate DataType="{x:Type scrnvm:UserEdit}">
									<scrnview:UserEdit/>
								</DataTemplate>
							</Grid.DataTemplates>
							<ContentControl Content="{Binding Screen}"/>
						</Grid>
					</DataTemplate>
				</Grid.DataTemplates>
				<ContentControl Content="{Binding Content}"/>
			</Grid>		
		</Grid>
		<Grid Name="OverlayGrid" Background="Gray" Opacity="0.7" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">			
		</Grid>
	</Grid>
</Window>
